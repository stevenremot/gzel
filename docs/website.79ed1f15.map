{"version":3,"sources":["../gzel.js","index.js"],"names":["SCREEN_WIDTH","SCREEN_HEIGHT","toHexPart","val","toString","padStart","Renderer","target","canvas","document","createElement","width","height","querySelector","appendChild","ctx","getContext","r","g","b","save","fillStyle","map","join","fillRect","restore","graphics_fill","fill","bind","fps","iterStep","Console","renderer","cartridge","lastIterTime","timeCount","Object","assign","debug_log","console","log","sinf","Math","sin","exportAPI","fileUrl","fetch","then","response","arrayBuffer","WebAssembly","instantiate","wasm","env","start","instance","exports","init","loop","requestAnimationFrame","delay","time","update","game","load"],"mappings":"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","file":"website.79ed1f15.map","sourceRoot":"../website","sourcesContent":["const SCREEN_WIDTH = 240;\nconst SCREEN_HEIGHT = 140;\n\n// Graphics\nfunction toHexPart(val) {\n  return val.toString(16).padStart(2, \"0\");\n}\n\nclass Renderer {\n  constructor(target) {\n    const canvas = document.createElement(\"canvas\");\n    canvas.width = SCREEN_WIDTH;\n    canvas.height = SCREEN_HEIGHT;\n    document.querySelector(target).appendChild(canvas);\n    this.canvas = canvas;\n    this.ctx = canvas.getContext(\"2d\");\n  }\n\n  fill(r, g, b) {\n    this.ctx.save();\n    this.ctx.fillStyle = \"#\" + [r, g, b].map(toHexPart).join(\"\");\n    this.ctx.fillRect(0, 0, SCREEN_WIDTH, SCREEN_HEIGHT);\n    this.ctx.restore();\n  }\n\n  exportAPI() {\n    return {\n      graphics_fill: this.fill.bind(this)\n    };\n  }\n}\n\n// Main API\nconst fps = 60;\nconst iterStep = 1000 / fps;\n\nexport class Console {\n  constructor(target) {\n    this.renderer = new Renderer(target);\n    this.cartridge = null;\n    this.lastIterTime = null;\n    this.timeCount = 0;\n  }\n\n  exportAPI() {\n    return Object.assign(\n      {\n        debug_log(r) {\n          console.log(r);\n        },\n        sinf: Math.sin\n      },\n      this.renderer.exportAPI()\n    );\n  }\n\n  load(fileUrl) {\n    return fetch(fileUrl)\n      .then(response => response.arrayBuffer())\n      .then(wasm => WebAssembly.instantiate(wasm, { env: this.exportAPI() }))\n      .then(cartridge => {\n        this.cartridge = cartridge;\n        this.start();\n      });\n  }\n\n  start() {\n    this.lastIterTime = null;\n    this.timeCount = 0;\n    this.cartridge.instance.exports.init();\n    this.loop();\n  }\n\n  loop() {\n    requestAnimationFrame(time => {\n      if (this.lastIterTime !== null) {\n        const delay = time - this.lastIterTime;\n        this.timeCount += delay >= 1000 ? 0 : delay;\n\n        while (this.timeCount > iterStep) {\n          this.cartridge.instance.exports.update(iterStep);\n          this.timeCount -= iterStep;\n        }\n      }\n\n      this.lastIterTime = time;\n      this.loop();\n    });\n  }\n}\n","import { Console } from '../gzel.js';\n\nconst game = new Console(\"#canvas\");\ngame.load(\n    './fill_screen.wasm'\n);\n"]}